apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: xjoin-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: xjoindatasourcepipelines.xjoin.cloud.redhat.com
spec:
  group: xjoin.cloud.redhat.com
  names:
    categories:
    - all
    kind: XJoinDataSourcePipeline
    listKind: XJoinDataSourcePipelineList
    plural: xjoindatasourcepipelines
    shortNames:
    - xjoindatasourcepipeline
    singular: xjoindatasourcepipeline
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              avroSchema:
                type: string
              databaseHostname:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databaseName:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databasePassword:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databasePort:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databaseTable:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databaseUsername:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              name:
                type: string
              pause:
                type: boolean
              version:
                type: string
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: xjoindatasources.xjoin.cloud.redhat.com
spec:
  group: xjoin.cloud.redhat.com
  names:
    categories:
    - all
    kind: XJoinDataSource
    listKind: XJoinDataSourceList
    plural: xjoindatasources
    shortNames:
    - xjoindatasource
    singular: xjoindatasource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              avroSchema:
                type: string
              databaseHostname:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databaseName:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databasePassword:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databasePort:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databaseTable:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              databaseUsername:
                properties:
                  value:
                    type: string
                  valueFrom:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                type: object
              pause:
                type: boolean
            type: object
          status:
            properties:
              activeVersion:
                type: string
              activeVersionIsValid:
                type: boolean
              refreshingVersion:
                type: string
              refreshingVersionIsValid:
                type: boolean
              specHash:
                type: string
            required:
            - activeVersion
            - activeVersionIsValid
            - refreshingVersion
            - refreshingVersionIsValid
            - specHash
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: xjoinindexpipelines.xjoin.cloud.redhat.com
spec:
  group: xjoin.cloud.redhat.com
  names:
    categories:
    - all
    kind: XJoinIndexPipeline
    listKind: XJoinIndexPipelineList
    plural: xjoinindexpipelines
    shortNames:
    - xjoinindexpipeline
    singular: xjoinindexpipeline
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              avroSchema:
                type: string
              customSubgraphImages:
                items:
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                  required:
                  - image
                  - name
                  type: object
                type: array
              name:
                type: string
              pause:
                type: boolean
              version:
                type: string
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: xjoinindexvalidators.xjoin.cloud.redhat.com
spec:
  group: xjoin.cloud.redhat.com
  names:
    categories:
    - all
    kind: XJoinIndexValidator
    listKind: XJoinIndexValidatorList
    plural: xjoinindexvalidators
    shortNames:
    - xjoinindexvalidator
    singular: xjoinindexvalidator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              avroSchema:
                type: string
              name:
                type: string
              pause:
                type: boolean
              version:
                type: string
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: xjoinindices.xjoin.cloud.redhat.com
spec:
  group: xjoin.cloud.redhat.com
  names:
    categories:
    - all
    kind: XJoinIndex
    listKind: XJoinIndexList
    plural: xjoinindices
    shortNames:
    - xjoinindex
    singular: xjoinindex
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              avroSchema:
                type: string
              customSubgraphImages:
                items:
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                  required:
                  - image
                  - name
                  type: object
                type: array
              pause:
                type: boolean
            type: object
          status:
            properties:
              activeVersion:
                type: string
              activeVersionIsValid:
                type: boolean
              dataSources:
                additionalProperties:
                  type: string
                type: object
              refreshingVersion:
                type: string
              refreshingVersionIsValid:
                type: boolean
              specHash:
                type: string
            required:
            - activeVersion
            - activeVersionIsValid
            - refreshingVersion
            - refreshingVersionIsValid
            - specHash
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: xjoinpipelines.xjoin.cloud.redhat.com
spec:
  group: xjoin.cloud.redhat.com
  names:
    categories:
    - all
    kind: XJoinPipeline
    listKind: XJoinPipelineList
    plural: xjoinpipelines
    shortNames:
    - xjoin
    singular: xjoinpipeline
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: XJoinPipeline is the Schema for the xjoinpipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: XJoinPipelineSpec defines the desired state of XJoinPipeline
            properties:
              connectCluster:
                minLength: 1
                type: string
              connectClusterNamespace:
                minLength: 1
                type: string
              elasticSearchIndexTemplate:
                minLength: 1
                type: string
              elasticSearchNamespace:
                minLength: 1
                type: string
              elasticSearchSecretName:
                minLength: 1
                type: string
              ephemeral:
                type: boolean
              hbiDBSecretName:
                minLength: 1
                type: string
              kafkaCluster:
                minLength: 1
                type: string
              kafkaClusterNamespace:
                minLength: 1
                type: string
              pause:
                type: boolean
              resourceNamePrefix:
                minLength: 3
                type: string
            type: object
          status:
            description: XJoinPipelineStatus defines the observed state of XJoinPipeline
            properties:
              activeAliasName:
                type: string
              activeDebeziumConnectorName:
                type: string
              activeESConnectorName:
                type: string
              activeESPipelineName:
                type: string
              activeIndexName:
                type: string
              activePipelineVersion:
                type: string
              activeReplicationSlotName:
                type: string
              activeTopicName:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              elasticsearchSecretNameName:
                type: string
              elasticsearchSecretVersion:
                type: string
              hbiDBSecretName:
                type: string
              hbiDBSecretVersion:
                type: string
              initialSyncInProgress:
                type: boolean
              pipelineVersion:
                type: string
              validationFailedCount:
                minimum: 0
                type: integer
              xjoinConfigVersion:
                type: string
            required:
            - activeAliasName
            - activeDebeziumConnectorName
            - activeESConnectorName
            - activeESPipelineName
            - activeIndexName
            - activePipelineVersion
            - activeReplicationSlotName
            - activeTopicName
            - conditions
            - elasticsearchSecretNameName
            - elasticsearchSecretVersion
            - hbiDBSecretName
            - hbiDBSecretVersion
            - initialSyncInProgress
            - pipelineVersion
            - validationFailedCount
            - xjoinConfigVersion
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: xjoin-operator-controller-manager
  namespace: xjoin-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: xjoin-operator-xjoin-operator-leader-election-role
  namespace: xjoin-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: xjoin-operator-xjoin-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - deployments
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkaconnectors
  - kafkaconnectors/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkaconnects
  - kafkas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkatopics
  - kafkatopics/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - xjoin.cloud.redhat.com
  resources:
  - xjoindatasourcepipelines
  - xjoindatasourcepipelines/finalizers
  - xjoindatasourcepipelines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - xjoin.cloud.redhat.com
  resources:
  - xjoindatasources
  - xjoindatasources/finalizers
  - xjoindatasources/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - xjoin.cloud.redhat.com
  resources:
  - xjoinindexpipelines
  - xjoinindexpipelines/finalizers
  - xjoinindexpipelines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - xjoin.cloud.redhat.com
  resources:
  - xjoinindexvalidators
  - xjoinindexvalidators/finalizers
  - xjoinindexvalidators/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - xjoin.cloud.redhat.com
  resources:
  - xjoinindices
  - xjoinindices/finalizers
  - xjoinindices/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - xjoin.cloud.redhat.com
  resources:
  - xjoinpipelines
  - xjoinpipelines/finalizers
  - xjoinpipelines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xjoin-operator-xjoin-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xjoin-operator-xjoin-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: xjoin-operator-xjoin-operator-leader-election-rolebinding
  namespace: xjoin-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: xjoin-operator-xjoin-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: xjoin-operator-controller-manager
  namespace: xjoin-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xjoin-operator-xjoin-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: xjoin-operator-xjoin-operator-manager-role
subjects:
- kind: ServiceAccount
  name: xjoin-operator-controller-manager
  namespace: xjoin-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xjoin-operator-xjoin-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: xjoin-operator-xjoin-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: xjoin-operator-controller-manager
  namespace: xjoin-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 222b734b.cloud.redhat.com
kind: ConfigMap
metadata:
  name: xjoin-operator-manager-config-cc84ct2ktf
  namespace: xjoin-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: xjoin-operator-controller-manager-metrics-service
  namespace: xjoin-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: xjoin-operator-controller-manager
  namespace: xjoin-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        image: quay.io/cloudservices/xjoin-operator:4844bbf
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 512Mi
      serviceAccountName: xjoin-operator-controller-manager
      terminationGracePeriodSeconds: 10
