apiVersion: v1
kind: Template
metadata:
  name: starterapp
parameters:
- name: IMAGE_TAG
- name: IMAGE
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: starterapp
  spec:
    envName: env-boot
    kafkaTopics:
    - topicName: example-topic
      partitions: 1
      replicas: 1
    database:
      name: dBaseName
    inMemoryDb: true
    objectStore:
      - name
    deployments:
      - name: worker-service
        minReplicas: 1
        podSpec:
          # Defined in docker file
          image: ${IMAGE}:${IMAGE_TAG}
        webServices:
          public:
            enabled: true
          metrics:
            enabled: true
        # initContainers:
        #   - env:
        #     - name: INIT_CONTAINER
        #       value: "True"
        #     inheritEnv: true
        #     args:
        #       - sh
        #       - /opt/app-root/src/deploy/init-container-setup.sh
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: 8000
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8000
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: ephemeral-namespace-operator
#   labels:
#     prometheus: app-sre
# spec:
#   endpoints:
#   - interval: 15s
#     path: /metrics
#     port: 9001
#   namespaceSelector:
#     matchNames:
#     - ephemeral-namespace-operator-system
#   selector:
#     matchLabels:
#       operator-name: ephemeral-namespace-operator